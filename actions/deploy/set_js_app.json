{
    "actions": [
        {
            "name": "set_js_app",
            "args": {
                "bundle": {
                    "metadata": {
                        "endpoints": {
                            "/compute": {
                                "post": {
                                    "js_module": "math.js",
                                    "js_function": "compute",
                                    "forwarding_required": "never",
                                    "authn_policies": [
                                        "user_cert"
                                    ],
                                    "mode": "readonly",
                                    "openapi": {
                                        "requestBody": {
                                            "required": true,
                                            "content": {
                                                "application/json": {
                                                    "schema": {
                                                        "properties": {
                                                            "op": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "add",
                                                                    "sub",
                                                                    "mul"
                                                                ]
                                                            },
                                                            "left": {
                                                                "type": "number"
                                                            },
                                                            "right": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "op",
                                                            "left",
                                                            "right"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                }
                                            }
                                        },
                                        "responses": {
                                            "200": {
                                                "description": "Compute result",
                                                "content": {
                                                    "application/json": {
                                                        "schema": {
                                                            "properties": {
                                                                "result": {
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "required": [
                                                                "result"
                                                            ],
                                                            "type": "object",
                                                            "additionalProperties": false
                                                        }
                                                    }
                                                }
                                            },
                                            "400": {
                                                "description": "Client-side error",
                                                "content": {
                                                    "application/json": {
                                                        "schema": {
                                                            "properties": {
                                                                "error": {
                                                                    "description": "Error message",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "error"
                                                            ],
                                                            "type": "object",
                                                            "additionalProperties": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "/compute2/{op}/{left}/{right}": {
                                "get": {
                                    "js_module": "math.js",
                                    "js_function": "compute2",
                                    "forwarding_required": "never",
                                    "authn_policies": [
                                        "user_cert"
                                    ],
                                    "mode": "readonly",
                                    "openapi": {
                                        "parameters": [
                                            {
                                                "name": "op",
                                                "in": "path",
                                                "required": true,
                                                "schema": {
                                                    "type": "string",
                                                    "enum": [
                                                        "add",
                                                        "sub",
                                                        "mul"
                                                    ]
                                                }
                                            },
                                            {
                                                "name": "left",
                                                "in": "path",
                                                "required": true,
                                                "schema": {
                                                    "type": "number"
                                                }
                                            },
                                            {
                                                "name": "right",
                                                "in": "path",
                                                "required": true,
                                                "schema": {
                                                    "type": "number"
                                                }
                                            }
                                        ],
                                        "responses": {
                                            "default": {
                                                "description": "Default response"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "modules": [
                        {
                            "name": "math.js",
                            "module": "function compute_impl(op, left, right) {\n  let result;\n  if (op == \"add\") result = left + right;\n  else if (op == \"sub\") result = left - right;\n  else if (op == \"mul\") result = left * right;\n  else {\n    return {\n      statusCode: 400,\n      body: {\n        error: \"unknown op\",\n      },\n    };\n  }\n\n  return {\n    body: {\n      result: result,\n    },\n  };\n}\n\nexport function compute(request) {\n  const body = request.body.json();\n\n  if (typeof body.left != \"number\" || typeof body.right != \"number\") {\n    return {\n      statusCode: 400,\n      body: {\n        error: \"invalid operand type\",\n      },\n    };\n  }\n\n  return compute_impl(body.op, body.left, body.right);\n}\n\nexport function compute2(request) {\n  const params = request.params;\n\n  // Type of params is always string. Try to parse as float\n  let left = parseFloat(params.left);\n  if (isNaN(left)) {\n    return {\n      statusCode: 400,\n      body: {\n        error: \"left operand is not a parseable number\",\n      },\n    };\n  }\n\n  let right = parseFloat(params.right);\n  if (isNaN(right)) {\n    return {\n      statusCode: 400,\n      body: {\n        error: \"right operand is not a parseable number\",\n      },\n    };\n  }\n\n  return compute_impl(params.op, left, right);\n}\n"
                        }
                    ]
                },
                "disable_bytecode_cache": false
            }
        }
    ]
}